@model IEnumerable<TaskManager.Models.TaskItem>
@using TaskManager.Extensions

@{
    ViewData["Title"] = "Task List";
    var selectedStatus = ViewBag.SelectedStatus as string ?? "";
    var selectedPriority = ViewBag.SelectedPriority as string ?? "";
    var excludeDone = ViewBag.ExcludeDone as bool? ?? false;
}

<h1>Task List</h1>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New</a>
</p>


<form asp-action="Index" method="get" class="row g-3 mb-4">

    // Status Filter
    <div class="col-md-3">
        <label for="statusFilter" class="form-label">Filter by Status</label>
        <select id="statusFilter" name="status" class="form-select">
            <option value="">All</option>
            @foreach (var status in Enum.GetNames(typeof(TaskManager.Models.TaskItemStatus)))
            {
                <option value="@status" selected="@(selectedStatus == status)">
                    @status
                </option>
            }
        </select>
    </div>

    // Priority Filter
    <div class="col-md-3">
        <label for="priorityFilter" class="form-label">Filter by Priority</label>
        <select id="priorityFilter" name="priority" class="form-select">
            <option value="">All</option>
            @foreach (var priority in Enum.GetNames(typeof(TaskManager.Models.TaskItemPriority)))
            {
                <option value="@priority" selected="@(selectedPriority == priority)">
                    @priority
                </option>
            }
        </select>
    </div>

    // Exclude Done Checkbox
    <div class="col-md-3 align-self-end">
        <div class="form-check">
            <input type="checkbox" name="excludeDone" class="form-check-input" id="excludeDoneCheckbox"
            @(excludeDone ? "checked" : "") />
            <label class="form-check-label" for="excludeDoneCheckbox">Hide Completed</label>
        </div>
    </div>
    <div class="col-md-3 align-self-end">
        <button type="submit" class="btn btn-secondary">Apply Filters</button>
    </div>
</form>


<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Status)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Priority)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DueDate)
            </th>
            <th>
                User
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProjectId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Priority)
            </td>
            <td>
				@Html.DisplayFor(modelItem => item.DueDate)
            <td>
                @item.User?.Name // Display user's name instead of id
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProjectId)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-warning">Edit</a> 
                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-primary">Details</a>
                <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
